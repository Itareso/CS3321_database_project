{
    "title": "重构（第2版）",
    "bookInfo": {
        "作者": "[美] Martin Fowler",
        "出版社": "人民邮电出版社",
        "出品方": "异步图书",
        "副标题": "改善既有代码的设计",
        "原作名": "Refactoring: Improving the Design of Existing Code",
        "译者": "熊节 / 林从羽",
        "出版年": "2019-5",
        "页数": "422",
        "定价": "99.00元",
        "装帧": "平装",
        "丛书": "异步图书-程序员必读经典系列",
        "ISBN": "9787115508652"
    },
    "related_intro": null,
    "star_rate": {
        "five_star_rate": "63.2%",
        "four_star_rate": "31.6%",
        "three_star_rate": "3.9%",
        "two_star_rate": "1.3%",
        "one_star_rate": "0.0%"
    },
    "authors": [
        {
            "link": "https://book.douban.com/author/104385/",
            "name": "马丁·福勒",
            "role": "作者",
            "douban_id": "104385"
        }
    ],
    "shops": [
        {
            "name": "京东商城",
            "price": "53.90元",
            "link": "https://book.douban.com/link2/?lowest=5390&pre=0&vendor=jingdong&srcpage=subject&price=5390&pos=1&url=https%3A%2F%2Fitem.jd.com%2F59548801728.html&cntvendor=1&srcsubj=33400354&type=bkbuy&subject=33400354"
        }
    ],
    "url": "https://book.douban.com/subject/33400354/",
    "douban_id": "33400354",
    "menu": [
        "",
        "        第1章　重构，第一个示例\t1",
        "        1.1　起点\t1",
        "        1.2　对此起始程序的评价\t3",
        "        1.3　重构的第一步\t5",
        "        1.4　分解statement函数\t6",
        "        1.5　进展：大量嵌套函数\t22",
        "        1.6　拆分计算阶段与格式化阶段\t24",
        "        1.7　进展：分离到两个文件（和两个阶段）\t31",
        "        1.8　按类型重组计算过程\t34",
        "        1.9　进展：使用多态计算器来提供数据\t41",
        "        1.10　结语\t43",
        "        第2章　重构的原则\t45",
        "        2.1　何谓重构\t45",
        "        2.2　两顶帽子\t46",
        "        2.3　为何重构\t47",
        "        2.4　何时重构\t50",
        "        2.5　重构的挑战\t55",
        "        2.6　重构、架构和YAGNI\t62",
        "        2.7　重构与软件开发过程\t63",
        "        2.8　重构与性能\t64",
        "        2.9　重构起源何处\t67",
        "        2.10　自动化重构\t68",
        "        2.11　延展阅读\t70",
        "        第3章　代码的坏味道\t71",
        "        3.1　神秘命名（Mysterious Name）\t72",
        "        3.2　重复代码（Duplicated Code）\t72",
        "        3.3　过长函数（Long Function）\t73",
        "        3.4　过长参数列表（Long Parameter List）\t74",
        "        3.5　全局数据（Global Data）\t74",
        "        3.6　可变数据（Mutable Data）\t75",
        "        3.7　发散式变化（Divergent Change）\t76",
        "        3.8　霰弹式修改（Shotgun Surgery）\t76",
        "        3.9　依恋情结（Feature Envy）\t77",
        "        3.10　数据泥团（Data Clumps）\t78",
        "        3.11　基本类型偏执（Primitive Obsession）\t78",
        "        3.12　重复的switch（Repeated Switches）\t79",
        "        3.13　循环语句（Loops）\t79",
        "        3.14　冗赘的元素（Lazy Element）\t80",
        "        3.15　夸夸其谈通用性（Speculative Generality）\t80",
        "        3.16　临时字段（Temporary Field）\t80",
        "        3.17　过长的消息链（Message Chains）\t81",
        "        3.18　中间人（Middle Man）\t81",
        "        3.19　内幕交易（Insider Trading）\t82",
        "        3.20　过大的类（Large Class）\t82",
        "        3.21　异曲同工的类（Alternative Classes with Different Interfaces）\t83",
        "        3.22　纯数据类（Data Class）\t83",
        "        3.23　被拒绝的遗赠（Refused Bequest）\t83",
        "        3.24　注释（Comments）\t84",
        "        第4章　构筑测试体系\t85",
        "        4.1　自测试代码的价值\t85",
        "        4.2　待测的示例代码\t87",
        "        4.3　第一个测试\t90",
        "        4.4　再添加一个测试\t93",
        "        4.5　修改测试夹具\t95",
        "        4.6　探测边界条件\t96",
        "        4.7　测试远不止如此\t99",
        "        第5章　介绍重构名录\t101",
        "        5.1　重构的记录格式\t101",
        "        5.2　挑选重构的依据\t102",
        "        第6章　第一组重构\t105",
        "        6.1　提炼函数（Extract Function）\t106",
        "        6.2　内联函数（Inline Function）\t115",
        "        6.3　提炼变量（Extract Variable）\t119",
        "        6.4　内联变量（Inline Variable）\t123",
        "        6.5　改变函数声明（Change Function Declaration）\t124",
        "        6.6　封装变量（Encapsulate Variable）\t132",
        "        6.7　变量改名（Rename Variable）\t137",
        "        6.8　引入参数对象（Introduce Parameter Object）\t140",
        "        6.9　函数组合成类（Combine Functions into Class）\t144",
        "        6.10　函数组合成变换（Combine Functions into Transform）\t149",
        "        6.11　拆分阶段（Split Phase）\t154",
        "        第7章　封装\t161",
        "        7.1　封装记录（Encapsulate Record）\t162",
        "        7.2　封装集合（Encapsulate Collection）\t170",
        "        7.3　以对象取代基本类型（Replace Primitive with Object）\t174",
        "        7.4　以查询取代临时变量（Replace Temp with Query）\t178",
        "        7.5　提炼类（Extract Class）\t182",
        "        7.6　内联类（Inline Class）\t186",
        "        7.7　隐藏委托关系（Hide Delegate）\t189",
        "        7.8　移除中间人（Remove Middle Man）\t192",
        "        7.9　替换算法（Substitute Algorithm）\t195",
        "        第8章　搬移特性\t197",
        "        8.1　搬移函数\t198",
        "        8.2　搬移字段（Move Field）\t207",
        "        8.3　搬移语句到函数（Move Statements into Function）\t213",
        "        8.4　搬移语句到调用者（Move Statements to Callers）\t217",
        "        8.5　以函数调用取代内联代码（Replace Inline Code with Function Call）\t222",
        "        8.6　移动语句（Slide Statements）\t223",
        "        8.7　拆分循环（Split Loop）\t227",
        "        8.8　以管道取代循环（Replace Loop with Pipeline）\t231",
        "        8.9　移除死代码（Remove Dead Code）\t237",
        "        第9章　重新组织数据\t239",
        "        9.1　拆分变量（Split Variable）\t240",
        "        9.2　字段改名（Rename Field）\t244",
        "        9.3　以查询取代派生变量（Replace Derived Variable with Query）\t248",
        "        9.4　将引用对象改为值对象（Change Reference to Value）\t252",
        "        9.5　将值对象改为引用对象（Change Value to Reference）\t256",
        "        第10章　简化条件逻辑\t259",
        "        10.1　分解条件表达式（Decompose Conditional）\t260",
        "        10.2　合并条件表达式（Consolidate Conditional Expression）\t263",
        "        10.3　以卫语句取代嵌套条件表达式（Replace Nested Conditional with Guard Clauses）\t266",
        "        10.4　以多态取代条件表达式（Replace Conditional with Polymorphism）\t272",
        "        10.5　引入特例（Introduce Special Case）\t289",
        "        10.6　引入断言（Introduce Assertion）\t302",
        "        第11章　重构API\t305",
        "        11.1　将查询函数和修改函数分离（Separate Query from Modifier）\t306",
        "        11.2　函数参数化（Parameterize Function）\t310",
        "        11.3　移除标记参数（Remove Flag Argument）\t314",
        "        11.4　保持对象完整（Preserve Whole Object）\t319",
        "        11.5　以查询取代参数（Replace Parameter with Query）\t324",
        "        11.6　以参数取代查询（Replace Query with Parameter）\t327",
        "        11.7　移除设值函数（Remove Setting Method）\t331",
        "        11.8　以工厂函数取代构造函数（Replace Constructor with Factory Function）\t334",
        "        11.9　以命令取代函数（Replace Function with Command）\t337",
        "        11.10　以函数取代命令（Replace Command with Function）\t344",
        "        第12章　处理继承关系\t349",
        "        12.1　函数上移（Pull Up Method）\t350",
        "        12.2　字段上移（Pull Up Field）\t353",
        "        12.3　构造函数本体上移（Pull Up Constructor Body）\t355",
        "        12.4　函数下移（Push Down Method）\t359",
        "        12.5　字段下移（Push Down Field）\t361",
        "        12.6　以子类取代类型码（Replace Type Code with Subclasses）\t362",
        "        12.7　移除子类（Remove Subclass）\t369",
        "        12.8　提炼超类（Extract Superclass）\t375",
        "        12.9　折叠继承体系（Collapse Hierarchy）\t380",
        "        12.10　以委托取代子类（Replace Subclass with Delegate）\t381",
        "        12.11　以委托取代超类（Replace Superclass with Delegate）\t399",
        "        参考文献\t405",
        "        索引\t409",
        "     · · · · · ·     (收起)",
        ""
    ],
    "img_link": "https://img1.doubanio.com/view/subject/s/public/s32284818.jpg",
    "info_a_labels_data": [
        {
            "text": "[美] Martin Fowler",
            "link": "https://book.douban.com/author/104385"
        },
        {
            "text": "人民邮电出版社",
            "link": "https://book.douban.com/press/2609"
        },
        {
            "text": "异步图书",
            "link": "https://book.douban.com/producers/34"
        },
        {
            "text": "熊节",
            "link": "https://book.douban.com/search/%E7%86%8A%E8%8A%82"
        },
        {
            "text": "林从羽",
            "link": "https://book.douban.com/search/%E6%9E%97%E4%BB%8E%E7%BE%BD"
        },
        {
            "text": "异步图书-程序员必读经典系列",
            "link": "https://book.douban.com/series/51987"
        }
    ],
    "tag": "经典"
}